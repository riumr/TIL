# 효진이는 멀리 뛰기를 연습하고 있습니다. 효진이는 한번에 1칸, 또는 2칸을 뛸 수 있습니다. 칸이 총 4개 있을 때, 효진이는
# (1칸, 1칸, 1칸, 1칸)
# (1칸, 2칸, 1칸)
# (1칸, 1칸, 2칸)
# (2칸, 1칸, 1칸)
# (2칸, 2칸)
# 의 5가지 방법으로 맨 끝 칸에 도달할 수 있습니다.
# 멀리뛰기에 사용될 칸의 수 n이 주어질 때, 효진이가 끝에 도달하는 방법이 몇 가지인지 알아내, 여기에 1234567를 나눈 나머지를 리턴하는 함수, solution을 완성하세요.
# 예를 들어 4가 입력된다면, 5를 return하면 됩니다.

# 움직일 수 있는 경우의 수 구하기

# 1 : 1 (1)
# 2 : 1 1, / 2  (1,1)
# 3 : 1 1 1, 2 1, / 1 2 (2,1)
# 4 : 1 1 1 1, 2 1 1, 1 2 1, / 1 1 2, 2 2 (3,2)
# 5 : 1 1 1 1 1, 2 1 1 1, 1 2 1 1, 2 2 1, 1 1 2 1, / 1 1 1 2,  2 1 2, 1 2 2 (5,3)
# 6 : 1 1 1 1 1 1, 2 1 1 1 1, 1 2 1 1 1


def solution(n):
    dp = [1] + [0] * n  # dp =[1,0,0,0...]
    dp[0], dp[1] = 1, 1
    for i in range(2, n + 1):
        dp[i] = (dp[i - 2] + dp[i - 1]) % 1234567
        # dp[0] = 1
        # dp[1] = 1
        # dp[2] = dp[0]+dp[1] = 2
        # dp[3] = dp[1]+dp[2] = 3
        # dp[4] = dp[2]+dp[3] = 5
        # ...
    return dp[n]


print()
